#pragma once

enum class TokenType
{
    // Single-character tokens.
    LEFT_PAREN, //()
    RIGHT_PAREN,
    LEFT_BRACE, //{}
    RIGHT_BRACE,
    LEFT_BRACKET, //[]
    RIGHT_BRACKET,
    COMMA,
    DOT,
    MINUS,
    PLUS,
    SEMICOLON,
    SLASH,
    STAR,

    // One or two character tokens.
    BANG,
    BANG_EQUAL,
    EQUAL,
    EQUAL_EQUAL,
    GREATER,
    GREATER_EQUAL,
    LESS,
    LESS_EQUAL,

    // Literals.
    IDENTIFIER,
    STRING,
    NUMBER,

    // Keywords.
    AND,
    CLASS,
    ELSE,
    FALSE,
    FUN,
    FOR,
    IF,
    NIL,
    OR,
    PRINT,
    RETURN,
    SUPER,
    THIS,
    TRUE,
    VAR,
    WHILE,

    TOKEN_EOF,
};

enum class TokenType2
{
    Return,
    SpecificValue,
    Method,
    Is,
    UsedName,
    Key,
    BareWord,
    Namespace,
    Class,
    ConstValue,
    RegOpt,
    RegDelim,
    RegMiddleDelim,
    RegReplaceFrom,
    RegReplaceTo,
    FieldDecl,
    TypeRef,
    LabelRef,
    LocalVarDecl,
    GlobalVarDecl,
    MultiLocalVarDecl,
    MultiGlobalVarDecl,
    Prototype,
    Var,
    CodeVar,
    ArrayVar,
    HashVar,
    Int,
    Double,
    String,
    RawString,
    ExecString,
    HereDocumentTag,
    HereDocumentRawTag,
    RawHereDocument,
    HereDocument,
    HereDocumentEnd,
    FormatDecl,
    Format,
    FormatEnd,
    Object,
    RegExp,
    Array,
    Hash,
    Operator,
    LocalVar,
    LocalArrayVar,
    LocalHashVar,
    GlobalVar,
    GlobalArrayVar,
    GlobalHashVar,
    ArrayRef,
    HashRef,
    ArrayAt,
    HashAt,
    ArraySet,
    HashSet,
    Function,
    Call,
    Argument,
    List,
    DataWord,
    SpecificKeyword,
    Sub,
    Dec,
    SubEqual,
    Pointer,
    Handle,
    Comma,
    SemiColon,
    Colon,
    NamespaceResolver,
    NotEqual,
    RegNot,
    ThreeTermOperator,
    StringAdd,
    Slice,
    ToDo,
    LeftParenthesis,
    RightParenthesis,
    LeftBracket,
    RightBracket,
    LeftBrace,
    RightBrace,
    ArgumentArray,
    ArrayDereference,
    ProgramArgument,
    LibraryDirectories,
    Mul,
    Glob,
    Exp,
    PowerEqual,
    MulEqual,
    Div,
    DefaultOperator,
    DefaultEqual,
    DivEqual,
    Ref,
    CodeRef,
    BitAnd,
    CallDecl,
    And,
    AndEqual,
    AndBitEqual,
    ShortCodeDereference,
    Annotation,
    Mod,
    HashDereference,
    ModEqual,
    ShortHashDereference,
    Environment,
    Include,
    Signal,
    BitXOr,
    NotBitEqual,
    Add,
    Inc,
    AddEqual,
    Less,
    LeftShift,
    LessEqual,
    Compare,
    Diamond,
    Assign,
    EqualEqual,
    Arrow,
    RegOK,
    Greater,
    GreaterEqual,
    RightShift,
    BitOr,
    OrBitEqual,
    Or,
    OrEqual,
    BitNot,
    PolymorphicCompare,
    ScalarDereference,
    ArraySizeDereference,
    BuiltinFunc,
    AUTOLOAD,
    ModWord,
    StringCompare,
    CORE,
    DefaultStmt,
    DESTROY,
    Do,
    ElseStmt,
    ElsifStmt,
    StringEqual,
    ForStmt,
    ForeachStmt,
    StringGreaterEqual,
    GivenStmt,
    StringGreater,
    IfStmt,
    Import,
    StringLessEqual,
    LocalDecl,
    StringLess,
    RegMatch,
    VarDecl,
    StringNotEqual,
    OurDecl,
    Package,
    RegQuote,
    RegDoubleQuote,
    RegDecl,
    RegList,
    RegExec,
    RequireDecl,
    RegReplace,
    StateDecl,
    STDERR,
    STDIN,
    STDOUT,
    FunctionDecl,
    RegAllReplace,
    Default,
    UnlessStmt,
    UntilStmt,
    UseDecl,
    WhenStmt,
    WhileStmt,
    StringMul,
    HereDocumentExecTag,
    HereDocumentBareTag,
    ArraySize,
    Break,
    HandleDelim,
    StringAddEqual,
    AlphabetAnd,
    Goto,
    Last,
    Next,
    AlphabetNot,
    AlphabetOr,
    Redo,
    AlphabetXOr,
    VersionString,
    RequiredName,
    CodeDereference,
    LeftShiftEqual,
    RightShiftEqual,
    Continue,
    StringMulEqual,
    Not,
    ShortScalarDereferen,
    PostDerefArraySli,
    ShortArrayDereferenc,
    PostDerefHashSlic,
    PostDerefCodeClos,
    PostDerefCodeOpen,
    Pod,
    Comment,
    WhiteSpace,
    PostDeref,
    PostDerefStar,
    Undefined,
}

enum class TokenKind
{
    Return,
    Annotation,
    Assign,
    AUTOLOAD,
    Class,
    Colon,
    Comma,
    Control,
    CORE,
    DataWord,
    Decl,
    DefaultStmt,
    DESTROY,
    Do,
    Function,
    Get,
    Handle,
    Import,
    Modifier,
    Module,
    ModWord,
    Namespace,
    Operator,
    Package,
    Ref,
    RegOpt,
    RegPrefix,
    RegReplacePrefix,
    Set,
    SingleTerm,
    SpecificKeyword,
    Stmt,
    StmtEnd,
    Symbol,
    Term,
    Undefined,
    Verbose,
}